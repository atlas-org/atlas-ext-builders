### externals ###
[group externals]
packages = bzip2, cython, eigen, gperftools, hdf5, protobuf, szip

# artificially require any environment variables defined by package or
# groups of packages.
#environment = group:buildtools, group:toolchaingcc

build_cmd_options = -j8
unpacked_target = configure
buildenv_CFLAGS = 
buildenv_CXXFLAGS = 

[package bzip2]
version = {bzip2_version}
features = tarball autoconf patch makemake
source_url = http://www.bzip.org/{bzip2_version}/{source_archive_file}
source_archive_checksum = md5:00b516f4704d4a7cb50a1d97e6e8e15b
unpacked_target = README
patch_url = file://{top}/patchfiles/{package}-{version}.patch
patch_cmd_options = -p0
prepare_cmd = /bin/cp -a {out}/{source_dir}/{source_unpacked}/* {out}/{build_dir}/.
prepare_cmd_std_opts = 
prepare_cmd_options = 
prepare_target = Makefile
build_cmd = make -f Makefile-libbz2_so && make
build_cmd_options = 
build_target = libbz2.so.{bzip2_version}
install_cmd = make install PREFIX={install_dir}
install_target = lib/libbz2.so.{bzip2_version}
buildenv_LD_LIBRARY_PATH = prepend:{out}/{build_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package cython]
version = {cython_version}
features = tarball pypackage
source_archive_file = Cython-{cython_version}.tar.gz
source_url = http://cython.org/release/{source_archive_file}
source_archive_checksum = md5:4af1218346510b464c0a6bf15500d0e2
source_unpacked = Cython-{version}
unpacked_target = setup.py
build_target = bin/cython
build_cmd_options = 
install_target = bin/cython
install_target_path = {install_dir}/{install_target}
install_cmd = python setup.py install
install_cmd_options = --prefix={install_dir}

[package eigen]
version = {eigen_version}
features = tarball patch cmake makemake
#source_archive_file = {version}.tar.gz
#source_url = http://bitbucket.org/eigen/eigen/get/{source_archive_file}
source_url = http://cern.ch/mana-fwk/downloads/ext/{source_archive_file}
source_archive_checksum = md5:bf663e4f0cb74c8443e915e3653eb639
patch_url = file://{top}/patchfiles/{package}-{version}.patch
patch_cmd_options = -p0
unpacked_target = CMakeLists.txt
build_target = Eigen
install_target = include/eigen3/Eigen

[package gperftools]
version = {gperftools_version}
source_url = https://gperftools.googlecode.com/files/{source_archive_file}
source_archive_checksum = md5:5e5a981caf9baa9b4afe90a82dcf9882
prepare_cmd_options = --enable-shared --enable-static
build_target = libprofiler.la
install_target = lib/libprofiler.la
buildenv_CFLAGS = 

[package hdf5]
version = {hdf5_version}
depends = prepare:szip_install, prepare:bzip2_install
source_url = http://www.hdfgroup.org/ftp/HDF5/current/src/{source_archive_file}
source_archive_checksum = md5:d804802feb99b87fc668a90e6fa34411
prepare_cmd_options = --enable-hl --enable-linux-lfs --enable-direct-vfd --enable-production --with-pthread --with-zlib --disable-static --enable-shared --enable-cxx --disable-fortran --with-szlib={szip_install_dir} --disable-sharedlib-rpath
build_target = src/libhdf5.la
install_target = lib/libhdf5.la

[package protobuf]
version = {protobuf_version}
source_url = https://protobuf.googlecode.com/files/{source_archive_file}
source_archive_checksum = md5:b751f772bdeb2812a2a8e7202bf1dae8
build_target = src/libprotobuf.la
install_target = lib/libprotobuf.la

[package szip]
version = {szip_version}
source_url = http://www.hdfgroup.org/ftp/lib-external/szip/{szip_version}/src/{source_archive_file}
source_archive_checksum = md5:902f831bcefb69c6b635374424acbead
prepare_cmd_options = --disable-static --enable-shared --enable-encoding --with-pic

build_target = src/libsz.la
install_target = lib/libsz.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

## EOF ##

